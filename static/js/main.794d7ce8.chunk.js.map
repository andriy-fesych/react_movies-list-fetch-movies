{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","loading","setLoading","error","setError","movieFound","setMovieFound","query","setQuery","loadMovie","fetch","then","res","json","catch","Response","Error","getMovie","validMovie","Title","Plot","Poster","imdbID","finally","addMovieHandler","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","onChange","target","value","classNames","onClick","disabled","length","hidden","App","setMovies","movieCandidate","find","candidate","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.794d7ce8.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\n\ntype Props = {\n  addMovie: (arg0: Movie) => void | null\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n  const [movieFound, setMovieFound]\n    = useState<Movie | null>(null);\n  const [query, setQuery] = useState<string>('');\n\n  const loadMovie = () => {\n    setLoading(true);\n    getMovie(query).then(movie => {\n      if ('Title' in movie) {\n        const validMovie = {\n          title: movie.Title,\n          description: movie.Plot,\n          imgUrl: movie.Poster\n           || 'https://via.placeholder.com/360x270.png?text=no%20preview',\n          imdbUrl: `https://www.imdb.com/title/${movie.imdbID}/`,\n          imdbId: movie.imdbID,\n        };\n\n        setMovieFound(validMovie);\n      } else {\n        setError(true);\n      }\n    })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const addMovieHandler = () => {\n    if (movieFound) {\n      addMovie(movieFound);\n      setQuery('');\n      setMovieFound(null);\n      setError(false);\n    }\n  };\n\n  const queryChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setError(false);\n  };\n\n  const preventFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!movieFound) {\n      loadMovie();\n    } else {\n      addMovieHandler();\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={preventFormSubmit}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              onChange={queryChangeHandler}\n              value={query}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"button\"\n              className={classNames('button',\n                'is-light', { 'is-loading': loading })}\n              onClick={loadMovie}\n              disabled={query.length === 0}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              data-cy=\"addButton\"\n              type=\"button\"\n              className={classNames('button',\n                'is-primary', { hidden: (!movieFound) })}\n              onClick={addMovieHandler}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        <div>\n          press &quot;Enter&quot; once to initiate search,\n          if a movie has been found succesfully\n          press &quot;Enter&quot; again to add it\n        </div>\n        <h2 className=\"title\">Preview</h2>\n        {\n          (movieFound)\n            ? <MovieCard movie={movieFound} />\n            : null\n        }\n      </div>\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=ab3d9135'; // ab3d9135\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovieAttempt = (movieCandidate: Movie) => {\n    if (movies.find(candidate => candidate.imdbId === movieCandidate.imdbId)) {\n      return null;\n    }\n\n    setMovies(prevState => [...prevState, movieCandidate]);\n\n    return null;\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovieAttempt} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}